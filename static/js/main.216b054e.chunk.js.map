{"version":3,"sources":["app_components/Form.js","app_components/Nav.js","app_components/PhotowrapList.js","routes_components/Cat.js","routes_components/Dog.js","routes_components/Lion.js","app_components/PhotowrapNotFount.js","app_components/Loading.js","routes_components/FormSearch.js","routes_components/PageNotFound.js","routes_components/Home.js","App.js","config.js","index.js"],"names":["Form","handleSubmit","e","preventDefault","inputV","value","props","history","push","fetchSearch","currentTarget","reset","className","onSubmit","this","type","name","placeholder","ref","input","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","Nav","to","exact","PhotowrapList","src","urlV","alt","Cat","state","defKey","componentDidMount","match","params","id","fetchCat","setState","theResultList","catURL","map","url","index","key","Dog","fetchDog","dogURL","Lion","fetchLion","lionURL","PhotowrapNotFount","Loading","FormSearch","currentSearchKey","loading","searchKey","searchURL","length","undefined","PageNotFount","Home","Fragment","App","fetchingDataFromFlickr","axios","get","then","response","data","photos","photo","loadingToFalse","convertToPhotoURL","catch","err","console","log","date","server","secret","cat","dog","lion","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.216b054e.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport {withRouter} from \"react-router-dom\"\n\nclass Form extends Component{\n\n    //add event handler on Search Input to called the fetchingDataFromFlickr method\n\n    handleSubmit = (e)=>{\n        e.preventDefault();\n        const inputV = this.inputV.value;\n        this.props.history.push(`/search/${inputV}`);\n        this.props.fetchSearch(inputV);\n        e.currentTarget.reset();\n    }\n\n    render(){\n        \n        return(\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\n            <input type=\"search\" name=\"search\" placeholder=\"Search\" ref={(input)=> this.inputV = (input)} required/> \n            <button type=\"submit\" className=\"search-button\">\n            <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            </svg>\n            </button>\n        </form>\n        )\n    }\n}\n\nexport default withRouter(Form)","import React, { Component } from \"react\"\nimport {withRouter,NavLink} from \"react-router-dom\";\nclass Nav extends Component {\n    render(){\n        return(\n            <nav className=\"main-nav\">\n                <ul>\n                    <li><NavLink to=\"/defcat/cat\">Cats</NavLink></li>\n                    <li><NavLink to=\"/defdog/dog\">Dogs</NavLink></li>\n                    <li><NavLink to=\"/deflion/lion\">Lion</NavLink></li>\n                    <li><NavLink exact to=\"/\">Home</NavLink></li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Nav)","import React, { Component } from \"react\"\n\nclass PhotowrapList extends Component{\n    render(){\n        return(\n            <li>\n                <img src={this.props.urlV} alt=\"image_from_Flickr\" />\n            </li>\n        )\n    }\n}\n\nexport default PhotowrapList","import React, { Component } from \"react\" ;\nimport {withRouter} from \"react-router-dom\";\nimport PhotowrapList from \"../app_components/PhotowrapList\";\n\nclass Cat extends Component{\n\n    //initial it's default search key to empty string\n\n    state = { \n        defKey : \"\"\n    }\n    \n    // update initial searchKey value and call the FetchingDataFromFlickr method.\n    componentDidMount = ()=>{\n        const defKey = this.props.match.params.id;\n        this.props.fetchCat(defKey)\n        this.setState({\n            defKey,\n        })\n    }\n\n    // structure the photo urls\n\n    theResultList = this.props.catURL.map((url,index) => { return <PhotowrapList urlV={url} key={index} />} )\n    \n    render(){\n        \n        return(\n            <div className=\"photo-container\">\n                {/* display it's search key */}\n                <h2>{this.state.defKey}</h2>\n                <ul>\n                    {\n                        // display the photo urls\n                        this.theResultList\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Cat); // set up the Router History","import React, { Component } from \"react\" ;\nimport {withRouter} from \"react-router-dom\";\nimport PhotowrapList from \"../app_components/PhotowrapList\";\n\nclass Dog extends Component{\n\n    //initial the searchKey to empty String\n\n    state = { \n        defKey : \"\"\n    }\n\n    // update initial searchKey value and call the FetchingDataFromFlickr method.\n    componentDidMount = ()=>{\n        const defKey = this.props.match.params.id;\n        this.props.fetchDog(defKey)\n        this.setState({\n            defKey\n        })\n    }\n\n    // structure the photo urls\n    theResultList = this.props.dogURL.map((url,index) =>  <PhotowrapList urlV={url} key={index} /> )\n\n\n    render(){\n        \n        return(\n            <div className=\"photo-container\">\n            {/* display it's search key */}\n                <h2>{this.state.defKey}</h2>\n                <ul>\n                    {// display the photo urls\n                        this.theResultList\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Dog); // set up the Router History","import React, { Component } from \"react\" ;\nimport {withRouter} from \"react-router-dom\";\nimport PhotowrapList from \"../app_components/PhotowrapList\";\n\nclass Lion extends Component{\n\n    //initial it's default search key to empty string\n    state = { \n        defKey : \"\"\n    }\n\n    // update initial searchKey value and call the FetchingDataFromFlickr method.\n    componentDidMount = ()=>{\n        const defKey = this.props.match.params.id;\n        this.props.fetchLion(defKey)\n        this.setState({\n            defKey\n        })\n    }\n\n    // structure the photo urls\n    theResultList = this.props.lionURL.map((url,index) =>  <PhotowrapList urlV={url} key={index} /> )\n\n\n    render(){\n        \n        return(\n            <div className=\"photo-container\">\n                {/* display it's search key */}\n                <h2>{this.state.defKey}</h2>\n                <ul>\n                    {// display the photo urls\n                        this.theResultList\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Lion); // set up the Router History","import React, { Component } from \"react\"\n\nclass PhotowrapNotFount extends Component{\n    render(){\n        return(\n            <li className=\"not-found\">\n                <h3>No Results Found</h3>\n                <p>You search did not return any results. Please try again.</p>\n            </li>\n        )\n    }\n}\nexport default PhotowrapNotFount","import React from \"react\"\n\nconst Loading = ()=>{\n    return(\n        <div className=\"photo-container\">\n            <h2>Loading...</h2>\n        </div>\n    )\n}\n\nexport default Loading","import React, { Component } from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport PhotowrapList from \"../app_components/PhotowrapList\";\nimport PhotowrapNotFount from \"../app_components/PhotowrapNotFount\";\nimport Loading from \"../app_components/Loading\";\n\nclass FormSearch extends Component{\n\n    //Reloading the fetchSearch method\n    componentDidMount = ()=> {\n        const currentSearchKey = this.props.match.params.id;\n        this.props.fetchSearch(currentSearchKey);\n    }\n\n    render(){\n        return(\n            <div className=\"photo-container\">\n                {/* Display the loading indicator when the loading is false */}\n                <h2>{this.props.loading ? this.props.searchKey : <Loading /> }</h2>\n                <ul>\n                    { \n                        // if the search state array greater than 0 display the photo else show the Result not found page\n                        this.props.searchURL.length > 0 \n                        ? (this.props.searchURL[0] === undefined ? null : this.props.searchURL.map((url,index)=> <PhotowrapList urlV={url} key={index} />))\n                        : <PhotowrapNotFount />\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(FormSearch);","import React from \"react\"\nimport {Link} from \"react-router-dom\";\nconst PageNotFount = ()=>{\n    return(\n        <div className=\"errorWrap\">\n            <h1 className=\"errorState\">404</h1>\n            <h2 className=\"errorMessage\">Page Not Found</h2>\n            <p className=\"errorDetail\">I'm Sorry,But I can't find the page you were looking for,to go back,click any of the buttons above,or click on the go home button below</p>\n            <Link to=\"/\">Go Home Page</Link>\n        </div>\n    )\n}\n\nexport default PageNotFount\n","import React, { Component } from \"react\" ;\n\n\nclass Home extends Component{\n    render(){\n        return(\n            <React.Fragment>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';  // import React and Component\nimport {BrowserRouter,Route,Switch,withRouter} from \"react-router-dom\"; // import BrowserRounter,Router,Switch,and WithoutRouter from react-router-dom\nimport axios from \"axios\"; // import axios\nimport Form from \"./app_components/Form\"; // import Form component\nimport Nav from \"./app_components/Nav\"; // import Nav Component \nimport Cat from \"./routes_components/Cat\"; // import Cat Component \nimport Dog from \"./routes_components/Dog\"; // import Dog Component \nimport Lion from \"./routes_components/Lion\"; // Import Lion Component \nimport FormSearch from \"./routes_components/FormSearch\"; // import FormSearch Component \nimport config from \"./config\"; // import flickr API key\nimport PageNotFount from './routes_components/PageNotFound'; // Import PageNotFound Component\nimport Home from \"./routes_components/Home\" // Import Home component\n\n\nclass App extends Component {\n\n  //Set up component State use constructor method.\n  constructor(){\n    super() \n    this.state = {\n      cat: [], // store cat url\n      dog: [], // store dog url\n      lion: [], // store lion url\n      searchURL : [undefined], // store search url initial it to undefine \n      searchKey : \"\", // store search key\n      loading: false // initial loading to false\n    }\n  }\n\n  // Fetching Data when The App component is Mounted,hard code the default Fetching Key Word to Cat,dog and lion\n  componentDidMount = ()=>{\n    this.fetchingDataFromFlickr(\"cat\") // \n    this.fetchingDataFromFlickr(\"dog\")\n    this.fetchingDataFromFlickr(\"lion\")\n  }\n\n\n  //method fetching data from flickr use Axios \n  fetchingDataFromFlickr = (searchKey) => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${config}&tags=${searchKey}&per_page=16&format=json&nojsoncallback=1`)\n    .then(response => response.data.photos.photo) //convert data from flickr \n    .then(this.loadingToFalse()) // set loading boolean value to false \n    .then(response => this.convertToPhotoURL(response)) // convert data to actual URL with convertToPhotoURL function\n    .then(url => { // set the default topic search key value and update it data to it's states array.\n      if(searchKey === \"cat\" || searchKey === \"dog\" || searchKey === \"lion\"){\n        this.setState({\n          [searchKey] : url\n        })\n      }else{\n        // update search keywords and it's url set the state loading property to true\n        this.setState({\n          searchURL : url,\n          searchKey ,\n          loading: true\n        })\n      }\n    })\n    //fetching error display \n    .catch(err => console.log(\"Fetching Error Occurs,please Double Check on the Fetching States\",err))\n  }\n\n\n  //method convert the data to it's actual url array \n  convertToPhotoURL = ( data )=>{\n    const url = data.map(date => `https://live.staticflickr.com/${date.server}/${date.id}_${date.secret}.jpg`);\n    return url;\n  }\n\n  // method to update loading state to false\n  loadingToFalse = ()=>{\n    this.setState({\n      loading: false\n    })\n  }\n\n\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"container\">\n              {/* Passing FetchingDataFromFlickr method to Form Component */}\n              <Form fetchSearch={this.fetchingDataFromFlickr} />\n              <Nav />\n              <Switch>\n                    {/* pass url and fetchingDataFromFlickr method to it's responsive component and Route*/}\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route path=\"/defcat/:id\" render={()=> <Cat catURL={this.state.cat} fetchCat={this.fetchingDataFromFlickr} />} />\n                    <Route path=\"/defdog/:id\" render={()=> <Dog dogURL={this.state.dog} fetchDog={this.fetchingDataFromFlickr} />} />\n                    <Route path=\"/deflion/:id\" render={()=> <Lion lionURL={this.state.lion} fetchLion={this.fetchingDataFromFlickr} />} />\n                    <Route path=\"/search/:id\" render={()=> <FormSearch searchURL={this.state.searchURL} \n                                                                        searchKey={this.state.searchKey} \n                                                                        loading={this.state.loading} \n                                                                        fetchSearch={this.fetchingDataFromFlickr}\n                                                                        /> } />\n                    {/* Display the page not found */}\n                    <Route path=\"/:id\" component={PageNotFount} />\n              </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default withRouter(App);\n","const key = \"b769787917c08d3153d9043f208ccd48\" ;\n\nexport default key;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './css/index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}